name: stack

on:
  push:
    branches: [master]
  pull_request:
  schedule:
    - cron: "00 15 * * *"

jobs:
  build:
    name: ${{ matrix.os }} (${{ matrix.resolver }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        resolver: ["lts-14", "lts-16", "lts-18", "nightly"]
        cache-version: ["2021-07-08"]

    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1
      with:
        ghc-version: "8.10.5"
        stack-version: "2.7.1"
        enable-stack: true

    - name: Install libralies (linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libcwiid-dev libsdl1.2-dev libsdl-image1.2-dev libsdl-ttf2.0-dev libsdl-mixer1.2-dev libfreenect-dev

    - name: Install libralies (mac)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install libfreenect sdl sdl_image sdl_mixer sdl_ttf pkg-config
        sed -i -e "s/#define main	SDL_main//" /usr/local/Cellar/sdl/1.2.15_3/include/SDL/SDL_main.h

    # See: https://github.com/actions/cache/issues/445
    - name: Install GNU tar
      if: runner.os == 'macOS'
      run: |
        brew install gnu-tar
        echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH

    - name: Cache ~/.stack
      uses: actions/cache@v2
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.resolver }}-${{ matrix.cache-version }}-stack

    - name: Install dependencies & Build (Linux)
      env:
        STACK_YAML: stack-${{ matrix.resolver }}.yaml
      if: runner.os == 'Linux'
      run: |
        stack test --only-dependencies
        stack test --fast
        stack install --fast

    - name: Install dependencies & Build (Mac)
      env:
        STACK_YAML: stack-${{ matrix.resolver }}.yaml
      if: runner.os == 'macOS'
      run: |
        stack test --only-dependencies --flag haskanoid:-wiimote
        stack test --fast --flag haskanoid:-wiimote
        stack install --fast --flag haskanoid:-wiimote